1. clone / new 를 통해서 디렉토리를 만들고
2. 디렉토리 안에 파일, 파일 안에 내용을 추가 후 commit
2-1. working copy에 있는 변경된 파일을 add하게 되면 index, staging area에 이동한다
이후 커밋하면 디렉터리에 저장하게된다.
(이렇게 하는 이유는 여러 개를 수정했을 경우에 하나의 파일만 버전에 올리고 싶거나 각각 수정된
파일에 대해 여러 개의 버전을 만들고 싶을 때 사용된다.)
2-2. 붉은 색에 있는 것이 없어졌다고 생각하면 된다.
3. Discard 버튼을 통해서 commit을 한 마지막 버전의 상태로 돌아간다. unstaged file을
마지막 상태로 돌린다.
3-1. commit 하기 전 마지막 commit한 상태와 비교하여 확인하는 절차는 매우 좋은 습관이다.
4. history에서 내가 원하는 버전으로 돌아가고 싶을 때 reset Current branch to this commit - hard
옵션을 통해 this commit으로 돌아가고 그 이후 버전을 삭제한다. (유의해서 써야한다.)
4.1 reset Current branch to this commit - mix 옵션으로 하면 내가 지금 작성하고 있는 파일의
status는 그대로 둔채 버전만 this commit으로 옮겨지고 이후 버전은 삭제된다. 이것은 내가 커밋을 잘못
했을 때 유용할 것 같다. 내가 잘못 commit한 버전만 삭제할 수 있으니 좋다
5. branch를 따로 만들어서 독립된 작업을 하고 master branch와 merge 할 수 있다.
5-1. 이때 conflict error가 날 수 있는데 이 경우 자신의 소스 코드를 고치고 나서 mark resolve 옵션을
선택하여 깃에게 이 문제를 해결했다고 알린다.
6. conflict 최소화
